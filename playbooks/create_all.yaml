---
- name: OKD Installer | Create ALL | Start
  hosts: '{{ target|default("localhost") }}'
  connection: local
  gather_facts: true

  pre_tasks:
    - name: Show date time
      ansible.builtin.set_fact:
        datetime_start: "{{ ansible_date_time.iso8601 }}"

  tasks:
# - name: OKD Installer | Create all | check required vars
#   ansible.builtin.import_playbook: var_check_required.yaml

    - name: OKD Installer | Create all | create config
      ansible.builtin.import_playbook: config.yaml
      vars:
        mode: create

    - name: OKD Installer | Create all | create stack | network
      ansible.builtin.import_playbook: stack_network.yaml

    - name: OKD Installer | Create all | create stack | IAM
      ansible.builtin.import_playbook: stack_iam.yaml

    - name: OKD Installer | Create all | create stack | DNS
      ansible.builtin.import_playbook: stack_dns.yaml

    - name: OKD Installer | Create all | create stack | Load Balancer
      ansible.builtin.import_playbook: stack_loadbalancer.yaml

    - name: OKD Installer | Create all | create stack | Compute
      ansible.builtin.import_playbook: create_node_all.yaml

    - name: OKD Installer | Create all | create stack | Load Balancer Router
      ansible.builtin.import_playbook: stack_loadbalancer.yaml
      vars:
        var_file: "{{ playbook_dir }}/vars/{{ config_provider }}/loadbalancer-router-default.yaml"
      when:
        - (config_provider is defined)
        - (config_platform|d('') != "aws")

    - name: OKD Installer | Create all | create stack | approve certs
      ansible.builtin.import_playbook: approve_certs.yaml
      vars:
        certs_max_retries: 8
        cert_wait_interval_sec: 60
      when:
        - (config_provider == 'aws') or (config_platform == 'none')

    - name: OKD Installer | Create all | create basic image-registry
      ansible.builtin.import_playbook: create_imageregistry.yaml
      when:
        - (config_provider == 'aws') or (config_platform == 'none')
        - create_registry|d('no') == 'yes'

    - name: OKD Installer | Create all | Load Config
      ansible.builtin.import_playbook: config.yaml
      vars:
        mode: load

    - name: OKD Installer | Create all | Bootstrap Destroy
      ansible.builtin.import_playbook: destroy_bootstrap.yaml
      when:
        - (config_provider == 'aws')
        - destroy_bootstrap | d('no') == 'yes'

# - name: OKD Installer | Create ALL Finish
#   hosts: '{{ target | default("localhost") }}'
#   connection: local

  post_tasks:
    - name: OKD Installer | Create all | Execution summary
      ansible.builtin.debug:
        msg:
          - "start=[{{ datetime_start | d('') }}] end=[{{ ansible_date_time.iso8601 }}]"
          - "export KUBECONFIG={{ config_install_dir }}/auth/kubeconfig"
