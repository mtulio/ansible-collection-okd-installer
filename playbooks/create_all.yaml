---
- name: OKD Installer | Create ALL | Start
  hosts: '{{ target|default("localhost") }}'
  connection: local
  gather_facts: true

  tasks:
    - name: OKD Installer | Create all | Timer start
      ansible.builtin.set_fact:
        okdi_call_timer_start: "{{ ansible_date_time.date }} {{ ansible_date_time.time }}"

- name: OKD Installer | Create all | Clients
  ansible.builtin.import_playbook: install_clients.yaml

- name: OKD Installer | Create all | Config | create config
  ansible.builtin.import_playbook: config.yaml
  vars:
    mode: create-config

- name: OKD Installer | Create all | Config | create config
  ansible.builtin.import_playbook: config.yaml
  vars:
    mode: create-manifests

- name: OKD Installer | Create all | create stack | IAM
  ansible.builtin.import_playbook: stack_iam.yaml

- name: OKD Installer | Create all | create stack | network
  ansible.builtin.import_playbook: stack_network.yaml

- name: OKD Installer | Create all | create stack | DNS
  ansible.builtin.import_playbook: stack_dns.yaml

- name: OKD Installer | Create all | create stack | Load Balancer
  ansible.builtin.import_playbook: stack_loadbalancer.yaml

- name: OKD Installer | Create all | Config | patch manifests
  ansible.builtin.import_playbook: config.yaml
  vars:
    mode: patch-manifests

- name: OKD Installer | Create all | Config | create ignitions
  ansible.builtin.import_playbook: config.yaml
  vars:
    mode: create-ignitions

- name: OKD Installer | Create all | Config | patch ignitions
  ansible.builtin.import_playbook: config.yaml
  vars:
    mode: patch-ignitions

- name: OKD Installer | Create all | os_mirror
  ansible.builtin.import_playbook: os_mirror.yaml
  when: os_mirror | d(false)

- name: OKD Installer | Create all | create stack | Compute nodes
  ansible.builtin.import_playbook: create_node_all.yaml

# - name: OKD Installer | Create all | create stack | Load Balancer Router
#   ansible.builtin.import_playbook: stack_loadbalancer.yaml
#   vars:
#     var_file: "{{ playbook_dir }}/vars/{{ config_provider }}/profiles/{{ cluster_profile  }}/loadbalancer-router-default.yaml"
#   when: config_platform|d('') == "none"

- name: OKD Installer | Create all | create stack | approve certs
  ansible.builtin.import_playbook: approve_certs.yaml
  vars:
    certs_max_retries: 8
    cert_wait_interval_sec: 60
  when: config_platform == 'none'

- name: OKD Installer | Create all | Load Config
  ansible.builtin.import_playbook: config.yaml
  vars:
    mode: load

- name: OKD Installer | Create all | Bootstrap Destroy
  ansible.builtin.import_playbook: destroy_bootstrap.yaml
  when: destroy_bootstrap | d('no') == 'yes'

- name: OKD Installer | Create ALL | End
  hosts: '{{ target|default("localhost") }}'
  connection: local
  gather_facts: true

  tasks:
    - name: OKD Installer | Create all | Timer end
      ansible.builtin.set_fact:
        okdi_call_timer_end: "{{ ansible_date_time.date }} {{ ansible_date_time.time }}"

    - name: OKD Installer | Create all | Ending Summary
      ansible.builtin.debug:
        msg:
        - "start=[{{ okdi_call_timer_start | d('') }}] end=[{{ okdi_call_timer_end }}]"
        - "total=[{{ ((okdi_call_timer_end | to_datetime) - (okdi_call_timer_start | to_datetime)) }}]"
        - "export KUBECONFIG={{ config_install_dir }}/auth/kubeconfig"
