---
openshift_prefix: "{{ cluster_state.infra_id }}"
openshift_instance_type: "{{ controlplane_instance | d('m6i.xlarge') }}"
openshift_instance_profile: "{{ cluster_state.compute.iam_profile_controlplane }}"
# TODO: fix image lookup for agnostic installations
#openshift_image_id: "{{ custom_image_id |d(cluster_state.compute.image_id) }}"
openshift_image_id: "{{ custom_image_id | d('ami-0a4a3456fc86deabc') }}"
openshift_security_groups:
  - "{{ openshift_prefix }}-bootstrap-sg"
  - "{{ openshift_prefix }}-controlplane-sg"
openshift_tags: "{{ cluster_state.tags }}"

# User Data template
_userdata_path: "{{ config_install_dir }}/master.ign"

_def:
  name: 'master'
  detailed_monitoring: yes
  ebs_optimized: no
  image_id: "{{ openshift_image_id }}"
  instance_role: "{{ openshift_instance_profile }}"
  instance_type: "{{ openshift_instance_type }}"
  security_groups: "{{ openshift_security_groups }}"
  state: present
  tags: "{{ openshift_tags }}"
  termination_protection: no
  volumes:
  - device_name: /dev/xvda
    ebs:
      volume_size: 128
      volume_type: gp3
      delete_on_termination: true

# https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_instance_module.html
compute_resources:
    # Module 'machine' options:
    # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_instance_module.html
    - provider: aws
      type: machine
      name: "{{ openshift_prefix }}-{{ _def.name }}-1"
      vpc_subnet_name: "{{ openshift_prefix }}-net-private-1a"
      filters:
        tag:Name: "{{ openshift_prefix }}-{{ _def.name }}-1"
        instance-state-name: running
      tags: "{% set x = _def.tags.__setitem__('Name', openshift_prefix + '-' + _def.name + '-1') %}{{ _def.tags }}"

      detailed_monitoring: "{{ _def.detailed_monitoring }}"
      ebs_optimized: "{{ _def.ebs_optimized }}"
      image_id: "{{ _def.image_id }}"
      instance_type: "{{ _def.instance_type }}"
      security_groups: "{{ _def.security_groups }}"
      state: "{{ _def.state }}"
      termination_protection: "{{ _def.termination_protection }}"
      user_data: "{{ lookup('file', _userdata_path) | from_json | to_nice_json | string }}"
      volumes: "{{ _def.volumes | d([]) }}"
      wait: no

      # Advanced IAM
      instance_role: "{{ _def.instance_role }}"
      # https://docs.openshift.com/container-platform/4.10/installing/installing_aws/installing-aws-user-infra.html#installation-aws-ami-stream-metadata_installing-aws-user-infra

      register_resources:
        - service: loadbalancer
          service_type: nlb
          resource_name: "{{ openshift_prefix }}-aint"
          resource_type: ip
        - service: loadbalancer
          service_type: nlb
          resource_name: "{{ openshift_prefix }}-aext"
          resource_type: ip
        - service: loadbalancer
          service_type: nlb
          resource_name: "{{ openshift_prefix }}-sint"
          resource_type: ip

    - provider: aws
      type: machine
      name: "{{ openshift_prefix }}-{{ _def.name }}-2"
      vpc_subnet_name: "{{ openshift_prefix }}-net-private-1b"
      filters:
        tag:Name: "{{ openshift_prefix }}-{{ _def.name }}-2"
      tags: "{% set x = _def.tags.__setitem__('Name', openshift_prefix + '-' + _def.name + '-2') %}{{ _def.tags }}"

      detailed_monitoring: "{{ _def.detailed_monitoring }}"
      ebs_optimized: "{{ _def.ebs_optimized }}"
      image_id: "{{ _def.image_id }}"
      instance_type: "{{ _def.instance_type }}"
      security_groups: "{{ _def.security_groups }}"
      state: "{{ _def.state }}"
      termination_protection: "{{ _def.termination_protection }}"
      user_data: "{{ lookup('file', _userdata_path) | from_json | to_nice_json | string }}"
      volumes: "{{ _def.volumes | d([]) }}"
      wait: no

      # Advanced IAM
      instance_role: "{{ _def.instance_role }}"
      # https://docs.openshift.com/container-platform/4.10/installing/installing_aws/installing-aws-user-infra.html#installation-aws-ami-stream-metadata_installing-aws-user-infra

      register_resources:
        - service: loadbalancer
          service_type: nlb
          resource_name: "{{ openshift_prefix }}-aint"
          resource_type: ip
        - service: loadbalancer
          service_type: nlb
          resource_name: "{{ openshift_prefix }}-aext"
          resource_type: ip
        - service: loadbalancer
          service_type: nlb
          resource_name: "{{ openshift_prefix }}-sint"
          resource_type: ip

    - provider: aws
      type: machine
      name: "{{ openshift_prefix }}-{{ _def.name }}-3"
      vpc_subnet_name: "{{ openshift_prefix }}-net-private-1c"
      filters:
        tag:Name: "{{ openshift_prefix }}-{{ _def.name }}-3"
      tags: "{% set x = _def.tags.__setitem__('Name', openshift_prefix + '-' + _def.name + '-3') %}{{ _def.tags }}"

      detailed_monitoring: "{{ _def.detailed_monitoring }}"
      ebs_optimized: "{{ _def.ebs_optimized }}"
      image_id: "{{ _def.image_id }}"
      instance_type: "{{ _def.instance_type }}"
      security_groups: "{{ _def.security_groups }}"
      state: "{{ _def.state }}"
      termination_protection: "{{ _def.termination_protection }}"
      user_data: "{{ lookup('file', _userdata_path) | from_json | to_nice_json | string }}"
      volumes: "{{ _def.volumes | d([]) }}"
      wait: no

      # Advanced IAM
      instance_role: "{{ _def.instance_role }}"
      # https://docs.openshift.com/container-platform/4.10/installing/installing_aws/installing-aws-user-infra.html#installation-aws-ami-stream-metadata_installing-aws-user-infra

      register_resources:
        - service: loadbalancer
          service_type: nlb
          resource_name: "{{ openshift_prefix }}-aint"
          resource_type: ip
        - service: loadbalancer
          service_type: nlb
          resource_name: "{{ openshift_prefix }}-aext"
          resource_type: ip
        - service: loadbalancer
          service_type: nlb
          resource_name: "{{ openshift_prefix }}-sint"
          resource_type: ip
