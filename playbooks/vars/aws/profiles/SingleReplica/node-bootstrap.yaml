---
_cluster_prefix: "{{ cluster_state.infra_id }}"

# Vars used on Bootstrap
bootstrap_bucket: "{{ _cluster_prefix }}-infra"

# Vars used on Machine/Compute Stack
_instance_type: "{{ controlplane_instance | d('m6i.xlarge') }}"
_instance_profile: "{{ cluster_state.compute.iam_profile_bootstrap }}"
_image_id: "{{ custom_image_id | d(cluster_state.compute.image_id) }}"
_subnet_name: "{{ _cluster_prefix }}-net-public-1a"

## User Data template
openshift_userdata:
  config_source: "s3://{{ bootstrap_bucket }}/bootstrap.ign"

## Common vars used in the Stack vars
_common:
  prefix: "{{ _cluster_prefix }}-bootstrap"
  detailed_monitoring: yes
  ebs_optimized: no
  image_id: "{{ _image_id }}"
  instance_role: "{{ _instance_profile }}"
  instance_type: "{{ _instance_type }}"
  security_groups:
    - "{{ _cluster_prefix }}-bootstrap-sg"
    - "{{ _cluster_prefix }}-controlplane-sg"
  state: present
  tags: "{{ cluster_state.tags }}"
  termination_protection: no
  volumes:
  - device_name: /dev/xvda
    ebs:
      volume_size: 128
      volume_type: gp3
      delete_on_termination: true

  vpc_subnet_name: "{{ _subnet_name }}"
  wait: yes
  wait_timeout: 500

# Stack Compute (Ansible Role cloud_compute) options:
compute_resources:
    - provider: aws
      type: machine
      name: "{{ _common.prefix }}"
      filters:
        tag:Name: "{{ _common.prefix }}"
        instance-state-name: running
      tags: "{% set x = cluster_state.tags.__setitem__('Name', _common.prefix) %}{{ cluster_state.tags }}"
      detailed_monitoring: "{{ _common.detailed_monitoring }}"
      ebs_optimized: "{{ _common.ebs_optimized }}"
      image_id: "{{ _common.image_id }}"
      instance_type: "{{ _common.instance_type }}"
      security_groups: "{{ _common.security_groups }}"
      state: "{{ _common.state }}"

      termination_protection: "{{ _common.termination_protection }}"
      user_data: "{{ lookup('template', 'ocp-bootstrap-user-data.j2') | to_nice_json | string }}"
      volumes: "{{ _common.volumes | d([]) }}"
      vpc_subnet_name: "{{ _common.vpc_subnet_name }}"
      wait: "{{ _common.wait }}"
      wait_timeout: "{{ _common.wait_timeout }}"

      # Advanced IAM
      instance_role: "{{ _common.instance_role }}"
      # https://docs.openshift.com/container-platform/4.10/installing/installing_aws/installing-aws-user-infra.html#installation-aws-ami-stream-metadata_installing-aws-user-infra

      register_resources:
        - service: loadbalancer
          service_type: nlb
          resource_name: "{{ _cluster_prefix }}-aint"
          resource_type: ip
        - service: loadbalancer
          service_type: nlb
          resource_name: "{{ _cluster_prefix }}-aext"
          resource_type: ip
        - service: loadbalancer
          service_type: nlb
          resource_name: "{{ _cluster_prefix }}-sint"
          resource_type: ip
