################################
# AWS Networks
# AWS us-east-1: 10.0.0.0/16 (to 10.0.255.255/16)
# AWS <unassigned>: 10.23.0.0/16 (to 10.23.255.255/19)

#########################

# TODO: fix those rules to more restrictive. This is used to dev env.
# security_groups:
#   - name: "{{ cluster_state.infra_id }}-bootstrap-sg"
#     description: Bootstrap Security Group
#     purge_tags: no
#     tags: "{{ cluster_state.tags | combine({'Name':cluster_state.infra_id+'-bootstrap-sg'}) }}"
#     purge_rules: true
#     rules:
#       - proto: tcp
#         from_port: 22
#         to_port: 22
#         cidr_ip: 0.0.0.0/0
#       - proto: all
#         cidr_ip: 10.0.0.0/8
#     purge_rules_egress: true
#     rules_egress:
#       - proto: all
#         cidr_ip: 0.0.0.0/0

#   - name: "{{ cluster_state.infra_id }}-controlplane-sg"
#     description: Security Group for Control Plane nodes
#     purge_tags: no
#     tags: "{{ cluster_state.tags | combine({'Name':cluster_state.infra_id+'-controlplane-sg'}) }}"
#     purge_rules: true
#     rules:
#       - proto: all
#         group_name: "{{ cluster_state.infra_id }}-controlplane-sg"
#       - proto: all
#         group_name: "{{ cluster_state.infra_id }}-compute-sg"
#         group_desc: Security Group for Compute nodes
#       - proto: all
#         cidr_ip: 10.0.0.0/8

#     purge_rules_egress: true
#     rules_egress:
#       - proto: all
#         cidr_ip: 0.0.0.0/0

#   - name: "{{ cluster_state.infra_id }}-compute-sg"
#     description: Security Group for Compute nodes
#     purge_tags: no
#     tags: "{{ cluster_state.tags | combine({'Name':cluster_state.infra_id+'-compute-sg'}) }}"
#     purge_rules: true
#     rules:
#       - proto: all
#         group_name: "{{ cluster_state.infra_id }}-controlplane-sg"
#         group_desc: Security Group for Control Plane nodes
#       - proto: all
#         group_name: "{{ cluster_state.infra_id }}-compute-sg"
#       - proto: all
#         cidr_ip: 10.0.0.0/8

#     purge_rules_egress: true
#     rules_egress:
#       - proto: all
#         cidr_ip: 0.0.0.0/0

#   - name: "{{ cluster_state.infra_id }}-vpce-ec2"
#     description: Security Group for EC2 VPC Endpoint
#     purge_tags: no
#     tags: "{{ cluster_state.tags | combine({'Name':cluster_state.infra_id+'-vpce-ec2'}) }}"
#     purge_rules: true
#     rules:
#       - proto: tcp
#         cidr_ip: 10.0.0.0/8
#         ports:
#         - 443
#         rule_desc: allow VPC CIDR on port 443

#     purge_rules_egress: true
#     rules_egress:
#       - proto: tcp
#         cidr_ip: 0.0.0.0/0
#         ports:
#         - 443
#         rule_desc: allow VPC CIDR on port 443

cloud_networks:
  ## AWS US East 1 (HA topology)
  - name: "{{ cluster_state.infra_id }}-vpc"
    #block: "{{ okd_net_default_cidr }}"
    block: "10.0.0.0/24"
    provider: ionos
    region: de/txl
    security_groups: "{{ security_groups | d([]) }}"
    tags: "{{ cluster_state.tags | d({}) }}"
    datacenter: "{{ cluster_state.infra_id }}"
    #internet_gateway: true
    # carrier_gateway: true
    ip_blocks:
      # - name: "{{ cluster_state.infra_id }}-natgw"
      #   size: 1
      - name: "{{ cluster_state.infra_id }}-lb"
        size: 1
      - name: "{{ cluster_state.infra_id }}-bootstrap"
        size: 1

    # nat_gateways:
    #   - name: "{{ cluster_state.infra_id }}-natgw-1a"
    #     lans:
    #       - name: "{{ cluster_state.infra_id }}-net-priv-nodes"
    #         gateway_ips: 10.0.0.1/24
    #     tags: "{{ cluster_state.tags | d({}) }}"
    #     wait: false
    #     ip_block_name: "{{ cluster_state.infra_id }}-natgw"
    #     ip_block_index: 0
    #     rules:
    #       - type: "SNAT"
    #         protocol: "TCP"
    #         source_subnet: "10.0.0.0/24"
    #         # target_subnet: "10.0.0.0"
    #         # target_port_range:
    #         #   start: 10000
    #         #   end: 20000

    # route_tables:
    #   - name: "{{ cluster_state.infra_id }}-rt-private-1a"
    #     routes:
    #       - dest: 0.0.0.0/0
    #         gw_type: natgw
    #         target: "{{ cluster_state.infra_id }}-natgw-1a"

    #   - name: "{{ cluster_state.infra_id }}-rt-private-1b"
    #     routes:
    #       - dest: 0.0.0.0/0
    #         gw_type: natgw
    #         target: "{{ cluster_state.infra_id }}-natgw-1b"

    #   - name: "{{ cluster_state.infra_id }}-rt-private-1c"
    #     routes:
    #       - dest: 0.0.0.0/0
    #         gw_type: natgw
    #         target: "{{ cluster_state.infra_id }}-natgw-1c"

    #   - name: "{{ cluster_state.infra_id }}-rt-public"
    #     routes:
    #       - dest: 0.0.0.0/0
    #         gw_type: igw

      # - name: "{{ cluster_state.infra_id }}-rt-public-edge"
      #   routes:
      #     - dest: 0.0.0.0/0
      #       gw_type: cagw

    subnets:
      - name: "{{ cluster_state.infra_id }}-net-public"
        # az: us-east-1a
        #cidr: 10.0.0.0/22
        # route_table: "{{ cluster_state.infra_id }}-rt-public"
        map_public: true
      - name: "{{ cluster_state.infra_id }}-net-priv-nodes"
        # az: us-east-1b
        cidr: 10.0.0.0/24
        # route_table: "{{ cluster_state.infra_id }}-rt-public"
        map_public: false
      # - name: "{{ cluster_state.infra_id }}-net-priv-lb"
      #   # az: us-east-1b
      #   cidr: 10.0.128.0/24
      #   # route_table: "{{ cluster_state.infra_id }}-rt-public"
      #   map_public: false

    # Public IPs: NLB, Bootstrap
    # ip_block:
    #   name: "{{ cluster_state.infra_id }}"
    #   size: 2

