---

- name: Create | Run Check vars
  ansible.builtin.include_tasks: check.yaml

- name: Create | Run custom assertions
  ansible.builtin.include_tasks: create-assertions.yaml

- name: Create | Check if metadata.json exists
  ansible.builtin.stat:
    path: "{{ config_install_dir }}/metadata.json"
  register: st_metadata

- name: Create | Render Install config file
  ansible.builtin.template:
    src: install-config.yaml.j2
    dest: "{{ config_install_dir }}/install-config.yaml"
    mode: 0644
  when: not(st_metadata.stat.exists)

- name: Create | Backup the rendered install config
  ansible.builtin.copy:
    src: "{{ config_install_dir }}/install-config.yaml"
    dest: "{{ config_install_dir }}/install-config-bkp.yaml"
    mode: 0644
  when: not(st_metadata.stat.exists)

- name: Create | Topology HA
  when:
  - not(st_metadata.stat.exists)
  block:
  - name: Create | Create manifests
    ansible.builtin.shell: |
      {{ bin_openshift_install }} create manifests --dir {{ config_install_dir }}

  - name: Create | Apply patches on manifest stage
    ansible.builtin.include_tasks: ./patches-manifests/{{ item }}.yaml
    loop:
      - "rm-capi-machines"

  - name: Create | Create ignition configs
    ansible.builtin.shell: |
      {{ bin_openshift_install }} create ignition-configs --dir {{ config_install_dir }}

# Render Stream JSON
- name: Create | Check exists coreos-stream.json
  ansible.builtin.stat:
    path: "{{ config_install_dir }}/coreos-stream.json"
  register: ex_coj

- name: Create | Create CoreOS Stream JSON
  ansible.builtin.shell: |
    {{ bin_openshift_install }} coreos print-stream-json \
      > {{ config_install_dir }}/coreos-stream.json
  when: not(ex_coj.stat.exists)
